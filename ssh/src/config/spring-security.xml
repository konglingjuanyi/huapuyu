<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <http auto-config="true"/>
    <!-- 拦截成自定义的读取权限的方式 重点在before上 --> 
    <beans:bean id="filterSecurityInterceptor"
        class="org.springframework.security.intercept.web.FilterSecurityInterceptor" autowire="byType">
        <beans:property name="objectDefinitionSource" ref="filterInvocationDefinitionSource" />
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
    </beans:bean>
	<!-- 指明资源，我觉得应该写在数据库中 -->
	<beans:bean id="filterInvocationDefinitionSource" class="security.FilterUser">
	   <beans:property name="adminPage" value="/admin.jsp"/> 
       <beans:property name="userPage" value="/**"/> 
       <beans:property name="userDao" ref="userDao"></beans:property>
	</beans:bean>
	<!-- 自定义访问处理类 -->
	<authentication-provider user-service-ref="userDetailsService">
	</authentication-provider>
	<beans:bean id="userDetailsService" class="security.UserIn">
	</beans:bean>
	
</beans:beans>
