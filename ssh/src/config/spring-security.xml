<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
    		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    		 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        		 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
                        
	<!--  
    <http auto-config="true" access-denied-page="/jsp/accessDenied.jsp">
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/images/**" filters="none" />
		<intercept-url pattern="/js/**" filters="none" />
		<intercept-url pattern="/login.jsp" filters="none" />
		<form-login login-page="/login.jsp" default-target-url="/index.jsp" authentication-failure-url="/login.jsp" />
		<access-denied-handler error-page="/common/403.jsp"/> 
		<logout logout-success-url="/login.jsp" />
		<session-management>
        	<concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
   		</session-management>
        <custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	 </http>
    
    <beans:bean id="securityFilter" class="security.FilterSecurityInterceptor">  
        <beans:property name="authenticationManager" ref="MyAuthenticationManager" />  
        <beans:property name="accessDecisionManager" ref="AccessDecisionManager" />  
        <beans:property name="securityMetadataSource" ref="MySecurityMetadataSource" />  
    </beans:bean>  
    
    <beans:bean id="MySecurityMetadataSource" init-method="loadResourceDefine" class="com.softvan.spring.security.InvocationSecurityMetadataSourceService">  
        <beans:property name="roleService" ref="RoleService" />  
        <beans:property name="actionService" ref="ActionService" />  
    </beans:bean>  
  
    <authentication-manager alias="MyAuthenticationManager">  
        <authentication-provider user-service-ref="UserDetailService">  
            <s:password-encoder hash="sha" />   
        </authentication-provider>  
    </authentication-manager> 
    
	<beans:bean id="userDetailsService" class="com.rstco.frame.pub.security.support.MyUserDetailService" />

    <beans:bean id="myAccessDecisionManagerBean"
        class="com.rstco.frame.pub.security.support.MyAccessDecisionManager">
    </beans:bean>
 
    <beans:bean id="mySecurityMetadataSource"
        class="com.rstco.frame.pub.security.support.MyInvocationSecurityMetadataSourceService">
    </beans:bean>
    -->
    
    <global-method-security pre-post-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>
    
    <http use-expressions="true" access-denied-page="/auth.jsp">
		<!--   
		<intercept-url pattern="/data/update*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/data/delete*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/data/list*" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/role/update*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/role/delete*" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/role/list*" access="hasAnyRole('ROLE_USER')" />
        <form-login login-page="/login.jsp" authentication-failure-url="/loginError.jsp"/>
        <logout />
        <remember-me />
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </session-management>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="aecurityInterceptor"/>
        -->
        
        <intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/login.jsp" access="permitAll" />
		<!--  
		<sec:intercept-url pattern="/auth.jsp" access="permitAll" />
		-->
		<intercept-url pattern="/WEB-INF/jsp/css/**" filters="none" />
		<intercept-url pattern="/WEB-INF/jsp/images/**" filters="none" />
		<intercept-url pattern="/WEB-INF/jsp/js/**" filters="none" />
		<intercept-url pattern="/WEB-INF/jsp/**" access="isAuthenticated()" />
        <form-login login-page="/login.jsp" authentication-failure-url="/login.jsp" default-target-url="/index.jsp"/>
        <logout invalidate-session="true" logout-success-url="/"/>
        <remember-me />
        <session-management invalid-session-url="/">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </session-management>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="aecurityInterceptor"/>
	</http>
	
	<!--    
	<authentication-manager>  
    	<authentication-provider>  
        	<jdbc-user-service  
	            data-source-ref="dataSource"  
	            users-by-username-query="SELECT name, pwd, 'true' FROM tb_user WHERE name = ? AND enable = true"  
	            authorities-by-username-query="SELECT a.name, b.name AS role FROM tb_user a, tb_role b, tb_user_role_relation c WHERE a.id = c.user_id AND c.role_id = b.id AND a.name = ?" />  
    	</authentication-provider>  
	</authentication-manager>
	-->
	
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
    我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <beans:bean id="aecurityInterceptor" class="com.anders.ssh.privilege.security.SecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="accessDecisionManagerImpl" />
        <beans:property name="securityMetadataSource" ref="filterInvocationSecurityMetadataSourceImpl" />
    </beans:bean>
    
    <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <!--  
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsServiceImpl"/>
    </authentication-manager>
    -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsServiceImpl">
        	<password-encoder hash="sha"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="userDetailsServiceImpl" class="com.anders.ssh.privilege.security.UserDetailsServiceImpl" />

    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <beans:bean id="accessDecisionManagerImpl" class="com.anders.ssh.privilege.security.AccessDecisionManagerImpl"/>
    
    <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
    <beans:bean id="filterInvocationSecurityMetadataSourceImpl" class="com.anders.ssh.privilege.security.FilterInvocationSecurityMetadataSourceImpl" />
	 
	<!--
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user authorities="ROLE_USER" name="guest" password="guest"/>
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	
	<authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="rod" password="123" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
    -->
	
	<!-- 认证配置, 使用userDetailsService提供的用户信息 -->
	<!--  
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="plaintext" />
		</authentication-provider>
	</authentication-manager>
	-->

	<!-- 项目实现的用户查询服务 -->
	<!--  
	<beans:bean id="userDetailsService" class="security.UserDetailsServiceImpl" />
	-->
	
</beans:beans>
