<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"   
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	   				   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           				   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           				   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           				   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<!-- 普通POJO对象 -->
	<!--  
	<bean id="pojo" class="com.anders.ssh.test.Pojo">
		<property name="id" value="123"/>
		<property name="name" value="zhuzhen"/>
		<property name="score" value="95"/>
	</bean>
	-->
	
	<!-- Setter注入 -->  
	<!--  
	<bean id="setterInjection" class="com.anders.ssh.test.SetterInjection">
		<property name="pojo" ref="pojo"/>
	</bean>
	-->
	
	<!-- 构造器注入 -->   
	<!--
	<bean id="constructorInjection" class="com.anders.ssh.test.ConstructorInjection">
		<constructor-arg index="0" ref="pojo"/>
		<constructor-arg index="1" type="int" value="10000"/>
		<constructor-arg index="2" type="java.lang.String" value="cme"/>
	</bean> 
	-->
	
	<!-- 静态工厂注入 -->
	<!--
	<bean id="factoryInjection" class="com.anders.ssh.test.FactoryInjection" factory-method="createInstance">
  		<constructor-arg index="0" ref="pojo"/>
		<constructor-arg index="1" type="int" value="20000"/>
		<constructor-arg index="2" type="java.lang.String" value="pm"/> 
	</bean>
	-->
	
	<bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="keepAliveSeconds" value="200" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>
	
	<context:component-scan base-package="com.anders.ssh.taskexecutor"/>
	<!--  
	<bean id="dataSource" class="org.unitils.database.UnitilsDataSourceFactoryBean" />
	-->
	
	<!-- 测试AndersRmi调用 -->
	<!--使用RmiProxyFactoryBean连接服务端 -->  
    <bean id="andersRmi" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">  
        <property name="serviceUrl" value="rmi://localhost:1199/AndersRmi" />  
        <property name="serviceInterface" value="com.anders.ssh.rmi.AndersRmi" />  
    </bean>
    
    <bean id="hessianInvoker" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">  
        <property name="serviceUrl" value="http://localhost:5555/ssh/interface/hessianInvoker" />  
        <property name="serviceInterface" value="com.anders.ssh.rmi.AndersRmi" />  
    </bean>
    
    <bean id="burlapInvoker" class="org.springframework.remoting.caucho.BurlapProxyFactoryBean">  
        <property name="serviceUrl" value="http://localhost:5555/ssh/interface/burlapInvoker" />  
        <property name="serviceInterface" value="com.anders.ssh.rmi.AndersRmi" />  
    </bean>
    
    <bean id="httpInvoker" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">  
        <property name="serviceUrl" value="http://localhost:5555/ssh/interface/httpInvoker" />  
        <property name="serviceInterface" value="com.anders.ssh.rmi.AndersRmi" />  
    </bean>
</beans>