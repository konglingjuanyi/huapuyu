create table TB_USER
(
  ID   INTEGER not null primary key,
  NAME VARCHAR2(20),
  PWD  VARCHAR2(20)
);

select * from TB_USER;

create materialized view log on TB_USER
with PRIMARY KEY;

CREATE MATERIALIZED VIEW mv_tb_user               
REFRESH FAST START WITH SYSDATE              
NEXT  SYSDATE + 1/48             
WITH PRIMARY KEY              
AS 
SELECT * FROM TB_USER;

insert into tb_user (id,name,pwd) values (2,'guolili','123');

--drop materialized view mv_tb_user;

exec dbms_mview.refresh('MV_TB_USER');


物化视图　　
　　物化视图，它是用于预先计算并保存表连接或聚集等耗时较多的操作的结果，这样，在执行查询时，就可以避免进行这些耗时的操作，而从快速的得到结果。物化视图有很多方面和索引很相似：使用物化视图的目的是为了提高查询性能；物化视图对应用透明，增加和删除物化视图不会影响应用程序中SQL 语句的正确性和有效性；物化视图需要占用存储空间；当基表发生变化时，物化视图也应当刷新。 
　　其中物化视图有三种：聚集物化视图、包含连接物化视图、嵌套物化视图。但三种物化视图的快速刷新的限制条件有很大区别，而其他方面则区别不大。创建物化视图时可以指定多种选项，主要选项如下：
　　1、创建方式（Build Methods）：Build  Immediate 和Build Deferred两种。Build  Immediate 是在创建物化视图的时候就生成数据，而Build Deferred则在创建时不生成数据，以后根据需要在生成数据。默认为Build  Immediate 。
　　2、查询重写（Query Rewrite）：Enable Query Rewrite和Disable Query Rewrite两种。分别指出创建的物化视图是否支持查询重写。查询重写是指当对物化视图的基表进行查询时，Oracle会自动判断能否通过查询物化视图来得到结果，如果可以，则避免了聚集或连接操作，而直接从已经计算好的物化视图中读取数据。默认为Disable Query Rewrite。 
　　3、刷新（Refresh）：指当基表发生了DML操作后，物化视图何时采用哪种方式和基表进行同步。刷新的模式有两种：On Demand和On Commit。On Demand指物化视图在用户需要的时候进行刷新，可以手工通过exec dbms_mview.refresh('MV_TB_USER');等方法来进行刷新，也可以通过JOB定时进行刷新。On Demand指出物化视图在对基表的DML操作提交的同时进行刷新。刷新的方法有四种：Fast 、Complete 、Force和Never。FAST刷新采用增量刷新，只刷新自上次刷新以后进行的修改。Complete 刷新对整个物化视图进行完全的刷新。如果选择Force方式，则Oracle在刷新时会去判断是否可以进行快速刷新，如果可以则采用FAST方式，否则采用Complete 的方式。Never指物化视图不进行任何刷新。默认值是Force On Demand。 
　　在建立物化视图的时候可以指定Order by 语句，使生成的数据按照一定的顺序进行保存。不过这个语句不会写入物化视图的定义中，而且对以后的刷新也无效。 
　　4、物化视图日志：如果需要进行快速刷新，则需要建立物化视图日志。物化视图日志根据不同物化视图的快速刷新的需要，可以建立为RowID或Primary Key类型的。还可以选择是否包括Sequence、Including New Values以及指定列的列表。 
　　可以指明On PreBuild Table语句将物化视图建立在一个已经存在的表上。这种情况下，物化视图和表必须同名。当删除物化视图时，不会删除同名的表。这种物化视图的查询重写要求参数Query_Rewrite_integerity必须设置为 trusted或者stale_tolerated。 
　　5、物化视图可以进行分区。而且基于分区的物化视图可以支持分区变化跟踪（PCT）。具有这种特性的物化视图，当基表进行了分区维护操作后，仍然可以进行快速刷新操作。对于聚集物化视图，可以在Group by 列表中使用Cube或RollUp，来建立不同等级的聚集物化视图。
　　示例1:
　　create materialized view MV_DOP_TEST
　　refresh force on demand
　　as
　　select dsso.dop_id,
　　soo.work_center_no,
　　soo.operation_description
　　from SHOP_ORDER_OPERATION SOO,
　　DOP_SUPPLY_SHOP_ORD DSSO
　　where soo.order_no=dsso.order_no
　　and   soo.release_no=dsso.release_no
　　and   soo.sequence_no=dsso.sequence_no;
　　---其中创建与删除物化视图与其表或视图DDL一样:
　　DROP materialized view log on materialized_view_log_name ; 

　　创建物化视图时创建存储的日志空间（存储物化试图的对象的改变信息） 
　　CREATE MATERIALIZED VIEW LOG ON Dop_Supply_Shop_Ord_Tab  --(基表名) 
　　tablespace ifsapp_DATA --日志保存在特定的表空间
　　WITH ROWID ; 
　　drop materialized view MV_materialized_view_name ; 
　　示例2:
　　create materialized view MV_DOP_TEST
　　TABLESPACE ifsapp_DATA --保存表空间
　　BUILD DEFERRED --延迟刷新不立即刷新,此建立初始视图一般没数据
　　refresh force --如果可以快速刷新则进行快速刷新，否则完全刷新
　　with rowid --根据rowid刷新（默认是主键）
　　On demand --按照指定方式刷新
　　start with to_date('2008-12-11 13:20:51','YYYY-MM-DD HH24:MI:SS') next sysdate+1/48 
　　as
　　select dsso.dop_id,
　　soo.work_center_no,
　　soo.operation_description
　　from SHOP_ORDER_OPERATION SOO,
　　DOP_SUPPLY_SHOP_ORD DSSO
　　where soo.order_no=dsso.order_no
　　and   soo.release_no=dsso.release_no
　　and   soo.sequence_no=dsso.sequence_no
