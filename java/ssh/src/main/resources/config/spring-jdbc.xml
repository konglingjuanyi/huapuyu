<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       					   http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<!--
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	-->
	<bean id="dataSourceTarget" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dev.driver}" />
		<property name="url" value="${dev.url}" />
		<property name="username" value="${dev.username}" />
		<property name="password" value="${dev.password}" />
		<!-- 连接池启动时的初始值 -->
		<!-- 
		<property name="initialSize" value="1" /> 
		-->
		<!-- 连接池的最大值 -->
		<!-- 
		<property name="maxActive" value="10" /> 
		-->
		<!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<!-- 
		<property name="maxIdle" value="2" /> 
		-->
		<!-- 最小空闲值，当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<!-- 
		<property name="minIdle" value="1"/> 
		-->
		<property name="maxActive" value="100" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg ref="dataSourceTarget"></constructor-arg>
	</bean>

	<bean id="masterDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${master.driver}"/>
	    <property name="url" value="${master.url}"/>
	    <property name="username" value="${master.username}"/>
	    <property name="password" value="${master.password}"/>
	</bean>
	
	<bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${slave.driver}"/>
	    <property name="url" value="${slave.url}"/>
	    <property name="username" value="${slave.username}"/>
	    <property name="password" value="${slave.password}"/>
	</bean>
	
	<bean id="oracleDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${oracle.driver}"/>
	    <property name="url" value="${oracle.url}"/>
	    <property name="username" value="${oracle.username}"/>
	    <property name="password" value="${oracle.password}"/>
	</bean>
	
	<bean id="mutiDataSource" class="com.anders.ssh.aop.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="slave" value-ref="slaveDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>

	<bean id="jdbcTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 
	<jdbc:initialize-database data-source="dataSource" enabled="${load.init.data}">
		<jdbc:script location="classpath:initData.sql"/>
	</jdbc:initialize-database>
	-->
	
	<!--  
	<jdbc:embedded-database id="dataSource" type="HSQL">
		<jdbc:script location="classpath:initData.sql"/>
	</jdbc:embedded-database>
	-->
</beans>
