<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.anders.ssh.bo"/>
        <property name="mapperLocations" value="classpath*:com/anders/ssh/mybatis/mybatis-*.xml" />
        <property name="plugins">
        	<array>
            	<ref bean="myInterceptor"/>
        	</array>
    	</property>
    </bean>
    
    <bean id="myInterceptor" class="com.anders.ssh.mybatis.MyInterceptor" />

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.anders.ssh.dao.mybatis" />
        <!-- 很奇特，下面这个配置不加的话，貌似MapperScannerConfigurer会给basePackage路径下的Dao接口也会实例化，造成有companyDao和accountDao -->
        <property name="annotationClass" value="com.anders.ssh.annotation.MyBatisMapper" />
    </bean>
	
	<bean id="mybatisTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  	<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>
