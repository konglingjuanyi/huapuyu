<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 
	对于探测模式autodetectModeName属性，Spring提供了4个取值：
	AUTODETECT_NONE           不启用自动探测，需要手动向MBean Server进行注册，即通过MBeanExporter的beans属性进入注册；
	AUTODETECT_MBEAN         在当前IOC容器中进行查找MBean组件；
	AUTODETECT_ASSEMBLER  设置根据MBeanInfoAssembler的策略进行探测；
	AUTODETECT_ALL               自动探测，是AUTODETECT_MBEAN和AUTODETECT_ASSEMBLER的并集。
	另外，Spring的MBeanExporter也提供了autodetect属性，取值为true和false，指定对MBean组件的探测行为。
	-->
	<bean id="andersJmx" class="org.springframework.jmx.export.MBeanExporter">
		<property name="autodetectModeName">
	 		<value>AUTODETECT_ALL</value>
	 	</property>
	</bean>
	<bean name="anders:name=AndersMBean" class="com.anders.ssh.jmx.Anders">
		<property name="id">
			<value>90000000001</value>
		</property>
	 	<property name="name">
	 		<value>zhuzhen</value>
	 	</property>
	</bean>
	
	<!--  
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="mydomain:myjavaobj=MyJavaObject" value-ref="myJavaObj" />
			</map>
		</property>
		<property name="assembler" ref="assembler" />
	</bean>
	<bean id="assembler" class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
		<property name="managedInterfaces">
			<list>
				<value>com.anders.ssh.jmx.MyManagedInterfaces</value>
			</list>
		</property>
	</bean>
	<bean name="myJavaObj" class="com.anders.ssh.jmx.MyJavaObject">
		<property name="id" value="88000000001" />
		<property name="name" value="shirdrn" />
	</bean>
	<bean id="server" class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="registry">
		<property name="objectName">
			<value>connector:name=rmi</value>
		</property>
		<property name="serviceUrl">
			<value>service:jmx:rmi://127.0.0.1/jndi/rmi://127.0.0.1:1099/jmxrmi</value>
		</property>
	</bean>
	<bean id="registry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
		<property name="port">
			<value>1099</value>
		</property>
	</bean>  
	-->
</beans>
