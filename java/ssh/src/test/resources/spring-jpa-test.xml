<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	   				   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           				   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           				   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           				   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
           				   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
           				   http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
						   http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.anders.ssh.dao.jpa" /> 						   

	<!-- property -->
	<import resource="classpath:config/spring-property.xml" />
	
	<!-- jpa unitils配置 -->
	<!-- 
	LocalEntityManagerFactoryBean:使用JPA PersistenceProvider自动检测机制( according to JPA's Java SE  bootstrapping )，并且大多数情况下，你只能定义一下persistence unit name
	从JNDI获取EntityManagerFactory:应用发布在javaee5的服务器中
	<beans>
		<jee:jndi-lookup id="myEmf" jndi-name="persistence/myPersistenceUnit"/>
	</beans>
	LocalContainerEntityManagerFactoryBean:spring扮演了容器的角色。完全掌管JPA
	-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <!-- 
			没有配置jpaVendorAdapter，单测时会报如下错误：
			org.unitils.core.UnitilsException: Make sure that the persistence provider that is used is an instance of UnitilsHibernatePersistenceProvider
				at org.unitils.orm.jpa.util.provider.hibernate.HibernateJpaProviderSupport.getProviderSpecificConfigurationObject(HibernateJpaProviderSupport.java:78)
		-->
		<property name="jpaVendorAdapter">
			<bean class="org.unitils.orm.jpa.util.provider.hibernate.UnitilsHibernateJpaVendorAdapter" />
		</property>
        <!-- 
         	由于在spring-test.xml中已经为entityManagerFactory配置了datasource，所以如果在persistence-test.xml继续配置jdbc，则会报如下错误：
         	ERROR [2012-05-26 16:37:04] [org.hibernate.tool.hbm2ddl.SchemaExport] schema export unsuccessful (SchemaExport.java:287)
			java.lang.UnsupportedOperationException: Not supported by BasicDataSource
        -->
		<property name="persistenceXmlLocation" value="persistence-test.xml" />
	</bean>

	<bean id="jpaTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="jpaTxManager" />

	<bean id="dataSource" class="org.unitils.database.UnitilsDataSourceFactoryBean" />

	<jpa:repositories base-package="com.anders.ssh.dao.datajpa" entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="jpaTxManager" />
</beans>