<form id="get_password1" action="$!securityController.get_password" method="post"> 
		$msg.get_password.user_name$msg.common.colon<input type="text" name="username" id="username" /><br />
		$msg.get_password.security_code$msg.common.colon<input type="text" name="securityCode" id="securityCode" /><br /> 
		<a href="javascript:document.getElementById('get_password').submit();">$msg.get_password.submit</a><br />
	</form>

<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"><!-- 页面文件的路径,相对于webapp -->
            <value>templates</value>
        </property>
        <!-- Velocity属性配置 -->
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
                <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
                <prop key="contentType">text/html;charset=UTF-8</prop><!-- contentType -->
                <prop key="velocimacro.library">macro/macros.vm</prop><!-- Velocimacro 模板库的列表 -->
                <prop key="eventhandler.referenceinsertion.class">com.sde.common.web.escape.reference.NoEscapeHtmlReference</prop>
                <prop key="eventhandler.noescape.html.match">/(?:screen_content)|(?:noescape_.*)/</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
          <property name="cache" value="false" /><!--是否缓存模板-->
          <property name="prefix" value="" />
          <property name="suffix" value=".vm" />
          <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /><!--toolbox配置文件路径-->
          <property name="dateToolAttribute" value="date" /><!--日期函数名称-->
          <property name="numberToolAttribute" value="number" /><!--数字函数名称-->
          <property name="contentType" value="text/html;charset=UTF-8" />
          <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->         
          <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
          <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
             <property name="layoutUrl" value="templates/layout/default.vm"/<!--指定layout文件-->
   </bean>
   
   1.ResourceTool问题
   Velocity Tools中的org.apache.velocity.tools.generic.ResourceTool是用于调用国际化文件的
   但是经过测试发现ResourceTool继承的类LocaleConfig是通过Locale.getDefault()获得locale
   而Locale.getDefault()的意思是Gets the current value of the default locale for this instance of the Java Virtual Machine
   所以就算修改浏览器的语言，也不能实现切换语言
   在vm文件中使用Velocity Tools国际化的方式是$msg.index.welcome（$msg.国际化Key）
