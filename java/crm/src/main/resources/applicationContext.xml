<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="false" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:email.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultAutoCommit" value="true" />
	</bean>
	
	<jdbc:initialize-database enabled="false" data-source="dataSource">
        <jdbc:script location="classpath:crm.sql" />
    </jdbc:initialize-database>
    
	<context:component-scan base-package="com.anders.crm" />
	<!-- 
	<context:component-scan base-package="com.anders.crm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan> 
    -->

	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties" value="classpath:hibernate.properties" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 
	messageSource这个ID千万不能改，否则delegatingMessageSource会获取不到ResourceBundleMessageSource
	-->
	<bean id="messageSource" name="resourceBundleMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="resources" /> 
	</bean>  
	
	<!-- 
	其实也可以不配置DelegatingMessageSource，Spring会自己注册DelegatingMessageSource，问题是默认注册的DelegatingMessageSource，ID也是messageSource，
	而ResourceBundleMessageSource的ID必须是messageSource，所以@Autowired时会出现两个messageSource，因此需要手工注册DelegatingMessageSource，将其ID改为delegatingMessageSource
	-->
	<bean id="delegatingMessageSource" class="org.springframework.context.support.DelegatingMessageSource" /> 
	
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.image.width">250</prop> 
						<prop key="kaptcha.image.height">50</prop>
						<prop key="kaptcha.textproducer.char.string">0123456789</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
					</props>
				</constructor-arg>
			</bean>
        </property>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${email.host}</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${email.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${email.smtp.timeout}</prop>
			</props>
		</property>
		<property name="username">
			<value>${email.username}</value>
		</property>
		<property name="password">
			<value>${email.password}</value>
		</property>
	</bean>
	
	<!--  
	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
    	<property name="from">
        	<value>${email.from}</value>
    	</property>
    </bean>
    -->
    
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
    	<property name="velocityProperties">
        	<props>
            	<prop key="resource.loader">class</prop>
            	<prop key="class.resource.loader.class">org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</prop>
            	<prop key="velocimacro.library"></prop>
        	</props>
		</property>
	</bean>
</beans>
