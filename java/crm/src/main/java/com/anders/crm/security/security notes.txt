FilterInvocation
Guarantees(保证) the request and response are instances of HttpServletRequest and HttpServletResponse, and that there are no null objects.

AuthenticationManager
Processes an Authentication request.

Authentication(认证)
Represents(代表) the token for an authentication request or for an authenticated(鉴定) principal(凭证) once the request has been processed by the AuthenticationManager.authenticate(Authentication) method. 
Once the request has been authenticated, the Authentication will usually be stored in a thread-local SecurityContext managed by the SecurityContextHolder by the authentication mechanism(机制,结构) which is being used. An explicit(明确的) authentication can be achieved(取得,获得), without using one of Spring Security's authentication mechanisms, by creating an Authentication instance and using the code: SecurityContextHolder.getContext().setAuthentication(anAuthentication);
Note that unless the Authentication has the authenticated property set to true, it will still be authenticated by any security interceptor (for method or web invocations) which encounters it. 
In most cases, the framework transparently takes care of managing the security context and authentication objects for you.

AccessDecisionManager
Makes a final access control (authorization) decision.

ConfigAttribute
Stores a security system related configuration attribute. 
When an org.springframework.security.access.intercept.AbstractSecurityInterceptor is set up, a list of configuration attributes is defined for secure object patterns. These configuration attributes have special meaning to a RunAsManager, AccessDecisionManager or AccessDecisionManager delegate. 
Stored at runtime with other ConfigAttributes for the same secure object target.

AffirmativeBased(一票决定)
Simple concrete(具体的) implementation(实现) of org.springframework.security.access.AccessDecisionManager that grants access if any AccessDecisionVoter returns an affirmative(赞成的,肯定的) response.

ConsensusBased(少数服从多数)
Simple concrete implementation of org.springframework.security.access.AccessDecisionManager that uses a consensus-based(共识) approach(方式). 
"Consensus" here means majority(大多数)-rule (ignoring abstains(弃权)) rather than unanimous(意见一致的,无异议的) agreement (ignoring abstains). If you require unanimity, please see UnanimousBased.

UnanimousBased(一票否决)
Simple concrete implementation of org.springframework.security.access.AccessDecisionManager that requires all voters to abstain or grant access.






